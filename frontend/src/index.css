@tailwind base;
@tailwind components;
@tailwind utilities;

/* Smooth transitions for theme change */
html {
  scroll-behavior: smooth;
  transition: background-color 0.3s, color 0.3s;
  height: 100%; /* <<< THIS IS CRITICAL FOR CENTERING */
}

body {
  /* Apply default light mode styles and dark mode using @apply and dark: prefix */
  /* Note: App.tsx now sets a gradient background on the main container, so these body colors might be less visible */
  @apply bg-white text-black dark:bg-gray-900 dark:text-white;
  font-family: system-ui, sans-serif;
  height: 100%; /* This relies on html being 100% too */
  margin: 0;
  padding: 0;
}

/* Ensure dark class works on html element for background color fallback */
html.dark {
  background-color: #111827;
}

/* Chatbot textarea styling (if you use a textarea later) */
textarea {
  font-family: inherit;
}

/* Scrollbar styling */
::-webkit-scrollbar {
  width: 8px;
}
::-webkit-scrollbar-thumb {
  background: #a0aec0;
  border-radius: 4px;
}

/* Optional: For reusable input/button components (not directly used in current App.tsx) */
.input-base {
  @apply px-4 py-2 rounded-md border bg-white dark:bg-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500;
}

.button-base {
  @apply px-4 py-2 rounded-md text-white font-medium transition;
}

.button-indigo {
  @apply bg-indigo-600 hover:bg-indigo-700;
}

.button-teal {
  @apply bg-teal-500 hover:bg-teal-600;
}

.button-yellow {
  @apply bg-yellow-400 hover:bg-yellow-500;
}

/* Animation for fade-in effect */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Apply the animation as a utility class */
.animate-fade-in {
  animation: fadeIn 0.5s ease-out forwards;
}